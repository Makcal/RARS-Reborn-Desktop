stages:
  - set up merge request
  - build
  - test
  - deploy

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -DinstallAtEnd=true
    -DdeployAtEnd=true  

.assign-reviewers-job:
  stage: set up merge request
  image: alpine
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && 
           $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
      when: always
  before_script:
    - apk add python3 curl jq
  script:
    - |
      EVENT=$(curl https://gitlab.pg.innopolis.university/api/v4/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}?private_token=${API_TOKEN})
      ASSIGNED=$(echo ${EVENT} | jq '.reviewers!=[]')
      if [ ${ASSIGNED} == "true" ]; then echo "Already assigned"; exit 0; fi
      AUTHOR_ID=$(echo ${EVENT} | jq .author.id)

      GROUP_ID=2049
      IDS=$(curl https://gitlab.pg.innopolis.university/api/v4/groups/${GROUP_ID}/members?private_token=${API_TOKEN} | \
        jq -r '[.[].id] | join(",")')
      # Or just use IDS=123,456,... if you don't have a group

      REVIEWER_ID=$(echo $AUTHOR_ID $RANDOM | python3 -c \
        "e,r=map(int,input().split());a={${IDS}};a.discard(e) if len(a)>1 else None;print(list(a)[r%len(a)])")
      echo "Selected reviewer ID: ${REVIEWER_ID}"

      echo "Adding code owners to the reviewers list"
      curl -X PUT -H "Content-Type: application/json" --data '{ "reviewer_ids": ['${REVIEWER_ID}'] }' \
        https://gitlab.pg.innopolis.university/api/v4/projects/${CI_PROJECT_ID}/merge_requests/${CI_MERGE_REQUEST_IID}?private_token=${API_TOKEN} \
        > curl_response
      cat curl_response | jq .

.jdk:
  stage: build
  tags:
    - linux
  image: 
    name: openjdk:23-slim-bullseye
    pull_policy: if-not-present
  # Cache downloaded dependencies and plugins between builds.
  # The key here separates one cache per branch/tag ($CI_COMMIT_REF_SLUG)
  cache:
    key: "maven-$CI_COMMIT_REF_SLUG"
    paths:
      - .m2/repository

build:
  extends: .jdk
  artifacts:
    when: on_success
    name: builds
    paths:
      - target/bundled
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - |
      cd core
      export MAVEN_OPTS="$MAVEN_OPTS -Dmaven.repo.local=../.m2/repository"
      ./mvnw $MAVEN_CLI_OPTS package
      mkdir build_jar
      cp out/RARS_Reborn_Core-1.0.jar build_jar
      ./mvnw \
        $MAVEN_CLI_OPTS \
        install:install-file \
        -Dfile=build_jar/RARS_Reborn_Core-1.0.jar \
        -DgroupId=org.rarsreborn \
        -DartifactId=core \
        -Dversion=1.0 \
        -Dpackaging=jar \
        -DgeneratePom=true
      export MAVEN_OPTS="$MAVEN_OPTS -Dmaven.repo.local=.m2/repository"
      cd ..

      ./mvnw $MAVEN_CLI_OPTS package -Dplatform=win
      ./mvnw $MAVEN_CLI_OPTS package -Dplatform=mac
      ./mvnw $MAVEN_CLI_OPTS package -Dplatform=linux
